{"version":3,"sources":["webpack:///./src/templates/course-list-template.js","webpack:///./src/components/Courses/Courses.js","webpack:///./src/components/Courses/index.js","webpack:///./src/components/Pagination/Pagination.js","webpack:///./src/components/Pagination/index.js"],"names":["query","CourseListTemplate","data","pageContext","path","currentPage","hasNextPage","hasPrevPage","prevPagePath","nextPagePath","edges","allMarkdownRemark","pageTitle","title","slug","Courses","isHorizontal","className","map","edge","key","node","fields","StyledLink","variation","frontmatter","categorySlug","category","description","Pagination","rel","to","PAGINATION","PREV_PAGE","NEXT_PAGE"],"mappings":"2FAAA,sHAmCaA,EAAK,aA0CHC,UArEY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,KAAMC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAE7CC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,YACAC,EAGEJ,EAHFI,YACAC,EAEEL,EAFFK,aACAC,EACEN,EADFM,aAGMC,EAAUR,EAAKS,kBAAfD,MACFE,EAAYP,EAAc,EAAd,kBAAoCA,EAAgB,UAEtE,OACE,kBAAC,IAAD,CAAQQ,MAAOD,EAAWE,KAAMV,GAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASM,MAAOA,IAChB,kBAAC,IAAD,CACEF,aAAcA,EACdC,aAAcA,EACdF,YAAaA,EACbD,YAAaA,Q,uECqBRS,G,UA5CC,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAH,SAAUM,aAEtB,yBAAKC,UAAU,4BACZP,EAAMQ,KAAI,SAAAC,GAAI,OACb,yBAAKF,UAAU,kBAAkBG,IAAKD,EAAKE,KAAKC,OAAOR,MACrD,yBAAKG,UAAU,wBACb,kBAACM,EAAA,EAAD,CAAYC,UAAU,UAAUpB,KAAMe,EAAKE,KAAKC,OAAOR,MACpDK,EAAKE,KAAKI,YAAYZ,QAG3B,kBAACU,EAAA,EAAD,CAAYC,UAAU,OAAOpB,KAAMe,EAAKE,KAAKC,OAAOR,MAApD,iBAON,yBAAKG,UAAU,cACZP,EAAMQ,KAAI,SAAAC,GAAI,OACb,yBAAKF,UAAU,kBAAkBG,IAAKD,EAAKE,KAAKC,OAAOR,MACrD,kBAACS,EAAA,EAAD,CAAYC,UAAU,WAAWpB,KAAMe,EAAKE,KAAKC,OAAOI,cACrDP,EAAKE,KAAKI,YAAYE,UAEzB,yBAAKV,UAAU,wBACb,kBAACM,EAAA,EAAD,CAAYC,UAAU,UAAUpB,KAAMe,EAAKE,KAAKC,OAAOR,MACpDK,EAAKE,KAAKI,YAAYZ,QAG3B,uBAAGI,UAAU,8BACVE,EAAKE,KAAKI,YAAYG,aAEzB,kBAACL,EAAA,EAAD,CAAYC,UAAU,OAAOpB,KAAMe,EAAKE,KAAKC,OAAOR,MAApD,mBCpCV,mC,mFCqCee,G,UA/BI,SAAC,GAAD,IACjBrB,EADiB,EACjBA,aACAC,EAFiB,EAEjBA,aACAH,EAHiB,EAGjBA,YACAC,EAJiB,EAIjBA,YAJiB,OAMjB,yBAAKU,UAAU,cACZV,GACC,yBAAKU,UAAU,mBACb,kBAAC,OAAD,CAAMa,IAAI,OAAOC,GAAIvB,EAAcS,UAAU,wBAC1Ce,IAAWC,YAIjB3B,GACC,yBAAKW,UAAU,mBACb,kBAAC,OAAD,CAAMa,IAAI,OAAOC,GAAItB,EAAcQ,UAAU,wBAC1Ce,IAAWE,eCvBtB","file":"component---src-templates-course-list-template-js-55a4da5f502c537d5686.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/shared/Layout';\nimport Courses from '../components/Courses';\nimport Page from '../components/shared/Page';\nimport Pagination from '../components/Pagination';\n\nconst CourseListTemplate = ({ data, pageContext, path }) => {\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath\n  } = pageContext;\n\n  const { edges } = data.allMarkdownRemark;\n  const pageTitle = currentPage > 0 ? `Courses - Page ${currentPage}` : 'Courses';\n\n  return (\n    <Layout title={pageTitle} slug={path}>\n      <Page>\n        <Courses edges={edges} />\n        <Pagination\n          prevPagePath={prevPagePath}\n          nextPagePath={nextPagePath}\n          hasPrevPage={hasPrevPage}\n          hasNextPage={hasNextPage}\n        />\n      </Page>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query CourseListTemplate($coursesLimit: Int!, $coursesOffset: Int!) {\n    allMarkdownRemark(\n      limit: $coursesLimit,\n      skip: $coursesOffset,\n      filter: { frontmatter: { template: { eq: \"course\" }, draft: { ne: true } } },\n      sort: {\n        fields: [frontmatter___title]\n        order: [ASC]\n    }){\n      edges {\n        node {\n          fields {\n            slug\n            categorySlug\n          }\n          frontmatter {\n            title\n            category\n            description\n          }\n        }\n      }\n    }\n  }\n`;\n\nCourseListTemplate.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(PropTypes.object)\n    })\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    currentPage: PropTypes.number,\n    hasNextPage: PropTypes.bool,\n    hasPrevPage: PropTypes.bool,\n    prevPagePath: PropTypes.string,\n    nextPagePath: PropTypes.string\n  })\n};\n\nexport default CourseListTemplate;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StyledLink from '../shared/StyledLink';\nimport './Courses.scss';\n\nconst Courses = ({ edges, isHorizontal }) =>\n  (isHorizontal ? (\n    <div className=\"CourseList--isHorizontal\">\n      {edges.map(edge => (\n        <div className=\"CourseList-card\" key={edge.node.fields.slug}>\n          <div className=\"CourseList-itemTitle\">\n            <StyledLink variation=\"primary\" path={edge.node.fields.slug}>\n              {edge.node.frontmatter.title}\n            </StyledLink>\n          </div>\n          <StyledLink variation=\"pill\" path={edge.node.fields.slug}>\n            Go Learn\n          </StyledLink>\n        </div>\n      ))}\n    </div>\n  ) : (\n    <div className=\"CourseList\">\n      {edges.map(edge => (\n        <div className=\"CourseList-item\" key={edge.node.fields.slug}>\n          <StyledLink variation=\"tertiary\" path={edge.node.fields.categorySlug}>\n            {edge.node.frontmatter.category}\n          </StyledLink>\n          <div className=\"CourseList-itemTitle\">\n            <StyledLink variation=\"primary\" path={edge.node.fields.slug}>\n              {edge.node.frontmatter.title}\n            </StyledLink>\n          </div>\n          <p className=\"CourseList-itemDescription\">\n            {edge.node.frontmatter.description}\n          </p>\n          <StyledLink variation=\"pill\" path={edge.node.fields.slug}>\n            Go Learn\n          </StyledLink>\n        </div>\n      ))}\n    </div>\n  ));\n\nCourses.propTypes = {\n  edges: PropTypes.arrayOf(PropTypes.object).isRequired,\n  isHorizontal: PropTypes.bool\n};\n\nexport default Courses;\n","export { default } from './Courses';\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"gatsby\";\nimport { PAGINATION } from \"../../constants\";\nimport \"./Pagination.scss\";\n\nconst Pagination = ({\n  prevPagePath,\n  nextPagePath,\n  hasNextPage,\n  hasPrevPage\n}) => (\n  <div className=\"Pagination\">\n    {hasPrevPage && (\n      <div className=\"Pagination-prev\">\n        <Link rel=\"prev\" to={prevPagePath} className=\"Pagination-prev-link\">\n          {PAGINATION.PREV_PAGE}\n        </Link>\n      </div>\n    )}\n    {hasNextPage && (\n      <div className=\"Pagination-next\">\n        <Link rel=\"next\" to={nextPagePath} className=\"Pagination-next-link\">\n          {PAGINATION.NEXT_PAGE}\n        </Link>\n      </div>\n    )}\n  </div>\n);\n\nPagination.propTypes = {\n  prevPagePath: PropTypes.string,\n  nextPagePath: PropTypes.string,\n  hasNextPage: PropTypes.bool,\n  hasPrevPage: PropTypes.bool\n};\n\nexport default Pagination;\n","export { default } from './Pagination';\n"],"sourceRoot":""}